    let Foldable = ./Type

in  let Monoid = ./../Monoid/Set

in    λ(m : Type)
    → λ(monoid : Monoid m)
    → λ(t : Type → Type)
    → λ(foldable : Foldable t)
    → λ(a : Type)
    → λ(f : a → m)
    → λ(ts : t a)
    → foldable.fold
      a
      ts
      m
      (λ(x : a) → λ(y : m) → monoid.op { _1 = f x, _2 = y })
      (monoid.identity {=})
