--   λ(object : Kind)
-- → λ(arrow : object → object → Type)
-- → λ(semigroupoid : ./../Semigroupoid/Type object arrow)
-- → λ(f : object → object)
-- → λ(monad : ./Type object arrow f)
-- →   { map =
--           λ(a : object)
--         → λ(b : object)
--         → λ(fn : arrow a b)
--         → monad.bind a b (semigroupoid.compose a b (f b) monad.identity fn)
--     }
--   : ./../Functor/Endo/Type object arrow f
<>
