    let kArrow = ./../Function/Kind

in  let kProduct = ./../Tuple/Kind

in    λ(f : kArrow (kProduct Type Type) Type)
    → λ(arrow : ./Type f)
    →   arrow.{ map }
      : ./../Functor/Profunctor/Type
        Type
        Type
        (./../uncurryT Type Type Type ./../Function/Type)
        (./../uncurryT Type Type Type ./../Function/Type)
        f
