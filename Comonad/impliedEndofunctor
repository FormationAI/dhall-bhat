--   λ(object : Kind)
-- → λ(arrow : object → object → Type)
-- → λ(w : object → object)
-- → λ(comonad : ./Type object arrow w)
-- →   { map =
--           λ(a : object)
--         → λ(b : object)
--         → λ(f : arrow a b)
--         → comonad.extend a b (λ(x : w a) → f (identity a x))
--     }
--   : ./../Functor/Endo/Type object arrow w
<>
