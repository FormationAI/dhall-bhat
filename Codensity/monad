    let object = Type

in  let arrow = ./../Function/Type

in    λ(category : ./../Category/Type object arrow)
    →     let Codensity = ./Type object arrow
      
      in    λ(m : object → object)
          → ./../Monad/fromPureBind
            object
            arrow
            category
            (Codensity m)
            (   λ(a : object)
              → λ(x : a)
              → λ(b : object)
              → λ(k : arrow a (m b))
              → k x
            )
            (   λ(a : object)
              → λ(b : object)
              → λ(k : arrow a (Codensity m b))
              → λ(codensity : Codensity m a)
              → λ(c : object)
              → λ(l : arrow b (m c))
              → codensity c (λ(x : a) → k x c l)
            )
