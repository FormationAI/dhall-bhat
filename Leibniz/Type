{- TODO: This should form a commutative monoid, with `refl` as identity.
-}
  λ(cObject : Kind)
→ λ(dObject : Kind)
→ λ(dArrow : dObject → dObject → Type)
→ λ(a : cObject)
→ λ(b : cObject)
→ { subst : ∀(f : cObject → dObject) → dArrow (f a) (f b) }
