    let kArrow = ./../Function/Kind

in  let kProduct = ./../Tuple/Kind

in    λ(cObject : Kind)
    →     let dObject = Type
      
      in    λ(dArrow : kArrow (kProduct dObject dObject) Type)
          → λ(dSemigroupoid : ./../Semigroupoid/Type dObject dArrow)
          → λ(f : kArrow cObject dObject)
          → ./../Lan/functor cObject dObject dArrow dSemigroupoid f f
