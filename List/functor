let Functor = ../Functor/Type

in    { map =
          λ(a : Type) →
          λ(b : Type) →
          λ(g : a → b) →
          λ(list : List a) →
            List/fold
              a
              list
              (List b)
              (λ(x : a) → λ(xs : List b) → [ g x ] # xs)
              ([] : List b)
      }
    : Functor List
