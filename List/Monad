    ./Applicative
  ∧ { bind =
          λ(a : Type)
        → λ(b : Type)
        → λ(k : a → List b)
        → λ(fa : List a)
        → List/build
          b
          (   λ(list : Type)
            → λ(cons : b → list → list)
            → List/fold a fa list (λ(x : a) → List/fold b (k x) list cons)
          )
    }
: ./../Monad/Type List
