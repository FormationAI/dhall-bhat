    let ReaderT = ./Type Type ./../Function/Type

in    λ(r : Type)
    → λ(m : Type → Type)
    → λ(monad : ./../Monad/Type Type ./../Function/Type m)
    → ./../Monad/fromPureBind
      Type
      ./../Function/Type
      ./../Function/category
      (ReaderT r m)
      (λ(a : Type) → λ(x : a) → λ(_ : r) → monad.identity a x)
      (   λ(a : Type)
        → λ(b : Type)
        → λ(k : a → ReaderT r m b)
        → λ(fa : ReaderT r m a)
        → λ(env : r)
        → monad.op b (monad.map a (m b) (λ(x : a) → k x env) (fa env))
      )
