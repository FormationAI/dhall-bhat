    let object = Type

in  let arrow = ./../Function/Type

in  let Monad = ./../Monad/Type object arrow

in  let ReaderT = ./Type object arrow

in    λ(r : object)
    →   { lift =
              λ(m : object → object)
            → λ(monad : Monad m)
            → λ(a : object)
            → λ(ma : m a)
            → λ(env : r)
            → ma
        }
      : ./../Transformer/Type
        object
        arrow
        (λ(m : object → object) → ReaderT m r)
