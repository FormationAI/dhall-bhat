    let Monad = ./../Monad/Type Type ./../Function/Type

in  let ReaderT = ./Type Type ./../Function/Type

in    λ(r : Type)
    →   { lift =
              λ(m : Type → Type)
            → λ(monad : Monad m)
            → λ(a : Type)
            → λ(ma : m a)
            → λ(env : r)
            → ma
        }
      : ./../Transformer/Type (ReaderT r)
