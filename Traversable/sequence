let Applicative = ../Applicative/Type

let Traversable = ../Traversable/Type

in  λ(t : Type → Type) →
    λ(traversable : Traversable t) →
    λ(f : Type → Type) →
    λ(applicative : Applicative f) →
    λ(a : Type) →
    λ(ts : t (f a)) →
      traversable.traverse f applicative (f a) a (λ(x : f a) → x) ts
