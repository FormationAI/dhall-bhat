{ Applicative = ./Applicative/package.dhall
, Arrow = ./Arrow/package.dhall
, Bifunctor = ./Bifunctor/package.dhall
, Category = ./Category/package.dhall
, Codensity = ./Codensity/package.dhall
, Comonad = ./Comonad/package.dhall
, Compose = ./Compose/package.dhall
, Coyoneda = ./Coyoneda/package.dhall
, Density = ./Density/package.dhall
, DifferenceList = ./DifferenceList/package.dhall
, Either = ./Either/package.dhall
, EitherT = ./EitherT/package.dhall
, Foldable = ./Foldable/package.dhall
, Function = ./Function/package.dhall
, Functor = ./Functor/package.dhall
, Identity = ./Identity/package.dhall
, Kleisli = ./Kleisli/package.dhall
, Lan = ./Lan/package.dhall
, List = ./List/package.dhall
, Monad = ./Monad/package.dhall
, Monoid = ./Monoid/package.dhall
, NonEmptyList = ./NonEmptyList/package.dhall
, Optional = ./Optional/package.dhall
, Profunctor = ./Profunctor/package.dhall
, Ran = ./Ran/package.dhall
, Reader = ./Reader/package.dhall
, ReaderT = ./ReaderT/package.dhall
, Semigroup = ./Semigroup/package.dhall
, Semigroupoid = ./Semigroupoid/package.dhall
, State = ./State/package.dhall
, StateT = ./StateT/package.dhall
, Strong = ./Strong/package.dhall
, Transformer = ./Transformer/package.dhall
, Traversable = ./Traversable/package.dhall
, Tuple = ./Tuple/package.dhall
, Yoneda = ./Yoneda/package.dhall
}
