  λ(cObject : Kind)
→ λ(cArrow : cObject → cObject → Type)
→ λ(dObject : Kind)
→ λ(dArrow : dObject → dObject → Type)
→ λ(f : { _1 : dObject, _2 : cObject } → Type)
→ λ(strong : ./type cObject cArrow dObject dArrow f)
→ strong.{ map } : ./../Functor/Profunctor cObject cArrow dObject dArrow f
