  λ(cObject : Kind)
→ λ(cArrow : cObject → cObject → Type)
→ λ(dObject : Kind)
→ λ(dArrow : dObject → dObject → Type)
→ λ(dCategory : ./../Category/Type dObject dArrow)
→     let object = cObject → dObject
  
  in  let arrow = ./Type cObject dObject dArrow
  
  in    { identity =
            λ(a : object) → λ(i : cObject) → dCategory.identity (a i)
        , op =
              λ(a : object)
            → λ(b : object)
            → λ ( p
                : ∀(r : Type) → (∀(z : object) → arrow z b → arrow a z → r) → r
                )
            → λ(i : cObject)
            → dCategory.op
              (a i)
              (b i)
              (   λ(r : Type)
                → λ ( arrowsOut
                    : ∀(z : dObject) → dArrow z (b i) → dArrow (a i) z → r
                    )
                → p
                  r
                  (   λ(z : object)
                    → λ(f : arrow z b)
                    → λ(g : arrow a z)
                    → arrowsOut (z i) (f i) (g i)
                  )
              )
        }
      : ./../Category/Type object arrow
