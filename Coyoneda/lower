    let object = Type

in    λ(arrow : object → object → Type)
    → λ(category : ./../Category/Type object arrow)
    → λ(f : object → object)
    → λ(functor : ./../Functor/Type object object arrow arrow f)
    → ./../Lan/lower
      object
      object
      arrow
      arrow
      (./../Category/extractSemigroupoid object arrow category)
      f
      functor
      (./../Identity/Type object)
      f
      (λ(b : object) → category.identity (f b))
