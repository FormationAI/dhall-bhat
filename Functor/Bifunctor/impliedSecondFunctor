  λ(cObject : Kind)
→ λ(cArrow : cObject → cObject → Type)
→ λ(cCategory : ./../../Category/Type cObject cArrow)
→ λ(dObject : Kind)
→ λ(dArrow : dObject → dObject → Type)
→ λ(eObject : Kind)
→ λ(eArrow : eObject → eObject → Type)
→ λ(f : cObject → dObject → eObject)
→ λ(bifunctor : ./Type cObject dObject eObject cArrow dArrow eArrow f)
→ λ(a : cObject)
→   { map =
          λ(b : dObject)
        → λ(c : dObject)
        → λ(fn : dArrow b c)
        → bifunctor.map
          { _1 = a, _2 = b }
          { _1 = a, _2 = c }
          { _1 = cCategory.identity a, _2 = fn }
    }
  : ./../Type dObject eObject dArrow eArrow (f a)
