{- This is much more general than Haskell’s `Bifunctor`.
  `./Pair ../Function/type` is closer to that.
-}
  λ(j : Type → Type → Type)
→ λ(k : Type → Type → Type)
→ λ(l : Type → Type → Type)
→ λ(f : Type → Type → Type)
→ { map :
        ∀(a : Type)
      → ∀(b : Type)
      → ∀(c : Type)
      → ∀(d : Type)
      → { _1 : j a c, _2 : k b d }
      → l (f a b) (f c d)
  }
