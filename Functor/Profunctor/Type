{- A profunctor `C ↛ D` is represented as the bifunctor `(D^op, C) → Set`. This
   is much more general than Haskell’s `Profunctor`. See `Hom` and `InternalHom`
   for that.
-}
  λ(cObject : Kind)
→ λ(cArrow : cObject → cObject → Type)
→ λ(dObject : Kind)
→ λ(dArrow : dObject → dObject → Type)
→ ./../Bifunctor/Type
  dObject
  (./../../Category/Op/Type dObject dArrow)
  cObject
  cArrow
  Type
  ./../../Function/Type
