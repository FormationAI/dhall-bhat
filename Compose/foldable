    let Foldable = ./../Foldable/Type

in  let Compose = ./Type Type Type Type

in    λ(f : Type → Type)
    → λ(fFoldable : Foldable f)
    → λ(g : Type → Type)
    → λ(gFoldable : Foldable g)
    →   { fold =
              λ(a : Type)
            → λ(compose : Compose f g a)
            → λ(b : Type)
            → λ(k : a → b → b)
            → fFoldable.fold
              (g a)
              compose
              b
              (λ(ga : g a) → gFoldable.fold a ga b k)
        }
      : Foldable (Compose f g)
