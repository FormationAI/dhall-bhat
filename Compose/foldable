let Foldable = ../Foldable/Type

in  λ(f : Type → Type) →
    λ(g : Type → Type) →
    λ(fFoldable : Foldable f) →
    λ(gFoldable : Foldable g) →
        { fold =
            λ(a : Type) →
            λ(compose : ./Type f g a) →
            λ(b : Type) →
            λ(k : a → b → b) →
              fFoldable.fold
                (g a)
                compose
                b
                (λ(ga : g a) → gFoldable.fold a ga b k)
        }
      : Foldable (./Type f g)
