let Functor = ../Functor/Type

in  λ(f : Type → Type) →
    λ(g : Type → Type) →
    λ(fFunctor : Functor f) →
    λ(gFunctor : Functor g) →
        { map =
            λ(a : Type) →
            λ(b : Type) →
            λ(k : a → b) →
              fFunctor.map (g a) (g b) (gFunctor.map a b k)
        }
      : Functor (./Type f g)
