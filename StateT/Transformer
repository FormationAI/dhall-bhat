--     let Monad = ./../Monad/Type Type ./../Function/Type

-- in    λ(s : Type)
--     →   { lift =
--               λ(m : Type → Type)
--             → λ(monad : Monad m)
--             → λ(a : Type)
--             → λ(ma : m a)
--             → λ(env : s)
--             → monad.bind
--               a
--               { val : a, state : s }
--               (   λ(x : a)
--                 → monad.identity { val : a, state : s } { val = x, state = env }
--               )
--               ma
--         }
--       : ./../Transformer/Type (./Type s)
<>
