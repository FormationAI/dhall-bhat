    let Transformer = ./../Transformer/Type

in  let Monad = ./../Monad/Type

in  let StateT = ./Type

in    λ(s : Type)
    →   { lift =
              λ(m : Type → Type)
            → λ(monad : Monad m)
            → λ(a : Type)
            → λ(ma : m a)
            → λ(env : s)
            → monad.bind
              a
              { val : a, state : s }
              (   λ(x : a)
                → monad.pure { val : a, state : s } { val = x, state = env }
              )
              ma
        }
      : Transformer (StateT s)
