    let kArrow = ./../Function/Kind

in  let kProduct = ./../Tuple/Kind

in    λ(object : Kind)
    → λ(arrow : kArrow (kProduct object object) Type)
    → λ(category : ./../Category/Type object arrow)
    →     ./functor/endo object arrow
        ∧ { identity = category.identity, op = category.identity }
      : ./../Monad/Type object arrow (./Type object)
