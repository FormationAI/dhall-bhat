    let object = Type

in  let cat = ./../Category/Monoidal/Set/cartesian

in  let category = ./../Function/category

in  let Identity = ./Type object

in    { identity =
          category.identity
      , op =
            λ(i : Type)
          → λ ( day
              :   ∀(r : Type)
                → ./../Day/convolution object cat cat Identity Identity i r
                → r
              )
          → day
            i
            (   λ(b : { _1 : Type, _2 : Type })
              → λ(fn : { _1 : b._1, _2 : b._2 } → i)
              → fn
            )
      }
    : ./../Applicative/Type cat Identity
