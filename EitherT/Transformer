--     let Transformer = ./../Transformer/Type

-- in  let EitherT = ./Type

-- in  let Either = ./../Either/Type

-- in  let Monad = ./../Monad/Type Type ../Function/Type

-- in    λ(a : Type)
--     →   { lift =
--               λ(m : Type → Type)
--             → λ(monad : Monad m)
--             → λ(b : Type)
--             → λ(ma : m b)
--             → monad.map b (Either a b) (λ(r : b) → < Right = r | Left : a >) ma
--         }
--       : Transformer (EitherT a)
<>
