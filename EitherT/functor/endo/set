--     let Endofunctor = ./../../../Functor/Endo/Set

-- in  let EitherT = ./../../Type

-- in  let Either = ./../../../Either/Type

-- in  let eitherF = ./../../../Either/functor/endo/set

-- in  let composeF = ./../../../Compose/functor/endo/set

-- in    λ(a : Type)
--     → λ(f : Type → Type)
--     → λ(functor : Endofunctor f)
--     → composeF f (Either a) functor (eitherF a) : Endofunctor (EitherT a f)
<>
