--     let Reader = ./Type

-- in    λ(r : Type)
--     →   { identity =
--             λ(a : Type) → λ(x : a) → λ(env : r) → x
--         , op =
--               λ(a : Type)
--             → λ(b : Type)
--             → λ(g : Reader r (a → b))
--             → λ(fa : Reader r a)
--             → λ(env : r)
--             → g env (fa env)
--         }
--       : ./../Applicative/Type Type ./../Function/Type (Reader r)
<>
